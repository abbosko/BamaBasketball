{"ast":null,"code":"require('dotenv').config({\n  path: \"./.env\"\n});\nconst token = require('./genToken.js');\n\n// !!!!!!! MOVE LATER !!!!!!!!\n// Firstbeat athlete object\nfunction FBAthlete(fname, lname, email, id) {\n  this.fname = fname;\n  this.lname = lname;\n  this.email = email;\n  this.id = id;\n}\n\n/*const apiHawkinsTest = () => {\r\n    fetch(process.env.HAWKINS_URL, {\r\n        headers: {\r\n            Authorization: \"bearer ${process.env.HAWKINS_API_KEY}\"\r\n            //X-AUTH-TOKEN': process.env.HAWKINS_API_KEY\r\n        }\r\n    }) \r\n    .then(response => { \r\n        if (response.ok) { \r\n        return response.text(); // Parse the response data as JSON \r\n        //return response;\r\n        } else { \r\n        throw new Error('API request failed'); \r\n        } \r\n    }) \r\n    .then(data => { \r\n        // Process the response data here \r\n        console.log(data); // Example: Logging the data to the console \r\n    }) \r\n    .catch(error => { \r\n        // Handle any errors here \r\n        console.error(error); // Example: Logging the error to the console \r\n    });\r\n}\r\n\r\napiHawkinsTest();*/\n\n/*const apiKinexonTest = () => {\r\n    fetch(process.env.KINEXON_URL, {\r\n        headers: {\r\n            //Authorization: 'Bearer ${process.env.KINEXON_API_KEY}'\r\n            'X-AUTH-TOKEN': process.env.KINEXON_API_KEY\r\n        }\r\n    }) \r\n    .then(response => { \r\n        if (response.ok) { \r\n        return response.text(); // Parse the response data as JSON \r\n        //return response;\r\n        } else { \r\n        throw new Error('API request failed'); \r\n        } \r\n    }) \r\n    .then(data => { \r\n        // Process the response data here \r\n        console.log(data); // Example: Logging the data to the console \r\n    }) \r\n    .catch(error => { \r\n        // Handle any errors here \r\n        console.error(error); // Example: Logging the error to the console \r\n    });\r\n}\r\n\r\napiKinexonTest();*/\n\n/*\r\n* Firstbeat API calls! :)\r\n*/\n_c = FBAthlete;\nlet fbAuth = 'Bearer ' + token.genFbToken(); // generates authorization token\nconst teamId = 17688; // UAMBB team id\nvar fbAthleteArray = [];\n\n// gets athlete info, creates instance of 'FBAthlete', stores in fbAthleteArray\nconst apiFirstBeatAthletes = () => {\n  fetch(process.env.FIRSTBEAT_URL.concat('/athletes'), {\n    // add {accountId}/athletes to url\n    headers: {\n      Authorization: fbAuth,\n      \"X-Api-Key\": process.env.FIRSTBEAT_API_KEY\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('API request failed');\n    }\n  }).then(data => {\n    for (let i = 0; i < data.athletes.length; i++) {\n      // create FBAthlete & push onto fbAthleteArray\n      fbAthleteArray.push(new FBAthlete(data.athletes[i].firstName, data.athletes[i].lastName, data.athletes[i].email, data.athletes[i].athleteId));\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\n// did this to get team id, do we need groups??\nconst apiFirstBeatTeam = () => {\n  fetch(process.env.FIRSTBEAT_URL.concat('/teams'), {\n    // add team to url\n    headers: {\n      Authorization: fbAuth,\n      \"X-Api-Key\": process.env.FIRSTBEAT_API_KEY\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('API request failed');\n    }\n  }).then(data => {\n    for (let i = 0; i < 3; i++) {\n      console.log(data.teams[0].groups[i]);\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\n//gets sessions going back to June 1st, 2022; store this data somewhere\nconst apiFirstBeatSessions = () => {\n  fetch(process.env.FIRSTBEAT_URL.concat('/teams/', teamId, '/sessions'), {\n    // add teams/{teamId}/sessions to url\n    headers: {\n      Authorization: fbAuth,\n      \"X-Api-Key\": process.env.FIRSTBEAT_API_KEY\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('API request failed');\n    }\n  }).then(data => {\n    console.log(data);\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\n// results for indiv session, session # for June 1st, 2022 is hard coded rn for an example\nconst apiFirstBeatSessionResults = () => {\n  fetch(process.env.FIRSTBEAT_URL.concat('/teams/', teamId, '/sessions/575554/results'), {\n    // add teams/{teamId}/sessions/{sessionId}/results to url\n    headers: {\n      Authorization: fbAuth,\n      \"X-Api-Key\": process.env.FIRSTBEAT_API_KEY\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json;\n    } else {\n      throw new Error('API request failed');\n    }\n  }).then(data => {\n    console.log(data);\n  }).catch(error => {\n    console.error(error);\n  });\n};\napiFirstBeatSessionResults();\nvar _c;\n$RefreshReg$(_c, \"FBAthlete\");","map":{"version":3,"names":["require","config","path","token","FBAthlete","fname","lname","email","id","_c","fbAuth","genFbToken","teamId","fbAthleteArray","apiFirstBeatAthletes","fetch","process","env","FIRSTBEAT_URL","concat","headers","Authorization","FIRSTBEAT_API_KEY","then","response","ok","json","Error","data","i","athletes","length","push","firstName","lastName","athleteId","catch","error","console","apiFirstBeatTeam","log","teams","groups","apiFirstBeatSessions","apiFirstBeatSessionResults","$RefreshReg$"],"sources":["C:/CS495/BamaBasketball-2/UAMBB/my-app/src/apiFunctions.js"],"sourcesContent":["require('dotenv').config({path:\"./.env\"}); \r\nconst token = require('./genToken.js');\r\n\r\n\r\n// !!!!!!! MOVE LATER !!!!!!!!\r\n// Firstbeat athlete object\r\nfunction FBAthlete(fname, lname, email, id) {\r\n    this.fname = fname;\r\n    this.lname = lname;\r\n    this.email = email;\r\n    this.id = id;\r\n}\r\n\r\n/*const apiHawkinsTest = () => {\r\n    fetch(process.env.HAWKINS_URL, {\r\n        headers: {\r\n            Authorization: \"bearer ${process.env.HAWKINS_API_KEY}\"\r\n            //X-AUTH-TOKEN': process.env.HAWKINS_API_KEY\r\n        }\r\n    }) \r\n    .then(response => { \r\n        if (response.ok) { \r\n        return response.text(); // Parse the response data as JSON \r\n        //return response;\r\n        } else { \r\n        throw new Error('API request failed'); \r\n        } \r\n    }) \r\n    .then(data => { \r\n        // Process the response data here \r\n        console.log(data); // Example: Logging the data to the console \r\n    }) \r\n    .catch(error => { \r\n        // Handle any errors here \r\n        console.error(error); // Example: Logging the error to the console \r\n    });\r\n}\r\n\r\napiHawkinsTest();*/\r\n\r\n/*const apiKinexonTest = () => {\r\n    fetch(process.env.KINEXON_URL, {\r\n        headers: {\r\n            //Authorization: 'Bearer ${process.env.KINEXON_API_KEY}'\r\n            'X-AUTH-TOKEN': process.env.KINEXON_API_KEY\r\n        }\r\n    }) \r\n    .then(response => { \r\n        if (response.ok) { \r\n        return response.text(); // Parse the response data as JSON \r\n        //return response;\r\n        } else { \r\n        throw new Error('API request failed'); \r\n        } \r\n    }) \r\n    .then(data => { \r\n        // Process the response data here \r\n        console.log(data); // Example: Logging the data to the console \r\n    }) \r\n    .catch(error => { \r\n        // Handle any errors here \r\n        console.error(error); // Example: Logging the error to the console \r\n    });\r\n}\r\n\r\napiKinexonTest();*/\r\n\r\n\r\n\r\n/*\r\n* Firstbeat API calls! :)\r\n*/\r\nlet fbAuth = 'Bearer ' + token.genFbToken();                // generates authorization token\r\nconst teamId = 17688;                                       // UAMBB team id\r\nvar fbAthleteArray = [];\r\n\r\n// gets athlete info, creates instance of 'FBAthlete', stores in fbAthleteArray\r\nconst apiFirstBeatAthletes = () => {\r\n    fetch((process.env.FIRSTBEAT_URL).concat('/athletes'), { // add {accountId}/athletes to url\r\n        headers: {\r\n            Authorization: fbAuth,\r\n            \"X-Api-Key\": process.env.FIRSTBEAT_API_KEY\r\n        }\r\n    }) \r\n    .then(response => { \r\n        if (response.ok) { \r\n            return response.json();\r\n        } else { \r\n            throw new Error('API request failed'); \r\n        } \r\n    }) \r\n    .then(data => {      \r\n        for(let i = 0; i < data.athletes.length; i++) {     // create FBAthlete & push onto fbAthleteArray\r\n            fbAthleteArray.push(new FBAthlete(data.athletes[i].firstName, data.athletes[i].lastName, data.athletes[i].email, data.athletes[i].athleteId));\r\n        }\r\n    }) \r\n    .catch(error => { \r\n        console.error(error);\r\n    });\r\n}\r\n\r\n// did this to get team id, do we need groups??\r\nconst apiFirstBeatTeam = () => {\r\n    fetch((process.env.FIRSTBEAT_URL).concat('/teams'), {  // add team to url\r\n        headers: {\r\n            Authorization: fbAuth,\r\n            \"X-Api-Key\": process.env.FIRSTBEAT_API_KEY\r\n        }\r\n    }) \r\n    .then(response => { \r\n        if (response.ok) { \r\n            return response.json();\r\n        } else { \r\n            throw new Error('API request failed'); \r\n        } \r\n    }) \r\n    .then(data => {\r\n        for(let i = 0; i < 3; i++) {\r\n           console.log(data.teams[0].groups[i]);\r\n        }      \r\n    }) \r\n    .catch(error => { \r\n        console.error(error);\r\n    });\r\n}\r\n\r\n//gets sessions going back to June 1st, 2022; store this data somewhere\r\nconst apiFirstBeatSessions = () => {\r\n    fetch((process.env.FIRSTBEAT_URL).concat('/teams/', teamId, '/sessions'), {  // add teams/{teamId}/sessions to url\r\n        headers: {\r\n            Authorization: fbAuth,\r\n            \"X-Api-Key\": process.env.FIRSTBEAT_API_KEY\r\n        }\r\n    }) \r\n    .then(response => { \r\n        if (response.ok) { \r\n            return response.json();\r\n        } else { \r\n            throw new Error('API request failed'); \r\n        } \r\n    }) \r\n    .then(data => {\r\n        console.log(data);     \r\n    }) \r\n    .catch(error => { \r\n        console.error(error);\r\n    });\r\n}\r\n\r\n// results for indiv session, session # for June 1st, 2022 is hard coded rn for an example\r\nconst apiFirstBeatSessionResults = () => {\r\n    fetch((process.env.FIRSTBEAT_URL).concat('/teams/', teamId, '/sessions/575554/results'), {  // add teams/{teamId}/sessions/{sessionId}/results to url\r\n        headers: {\r\n            Authorization: fbAuth,\r\n            \"X-Api-Key\": process.env.FIRSTBEAT_API_KEY\r\n        }\r\n    }) \r\n    .then(response => { \r\n        if (response.ok) { \r\n            return response.json;\r\n        } else { \r\n            throw new Error('API request failed'); \r\n        } \r\n    }) \r\n    .then(data => {\r\n        console.log(data);     \r\n    }) \r\n    .catch(error => { \r\n        console.error(error);\r\n    });\r\n}\r\n\r\napiFirstBeatSessionResults();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}